
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ДаннДляОтображения, ВыборДляОтображения, ВыбраннаяСтрока;

	Параметры.Свойство("ДаннДляОтображения", ДаннДляОтображения);
	Параметры.Свойство("ВыборДляОтображения", ВыборДляОтображения);
	Параметры.Свойство("ВыбраннаяСтрока", ВыбраннаяСтрока);

	// проверка на наличие данных РезультатВыполнения
	Если Не ЗначениеЗаполнено(ДаннДляОтображения) Тогда	
		Возврат;
	КонецЕсли;

	ВывестиТаблицуНаФорму(ЭтаФорма, "ПодробнДаннТаблЗнач", СтруктураВТаблицуЗначенийСОписаниемТипов(ДаннДляОтображения));

КонецПроцедуры

&НаСервере
Функция СтруктураВТаблицуЗначенийСОписаниемТипов(ДаннДляОтображения) 

	КЧ = Новый КвалификаторыЧисла(12,2);
	КС = Новый КвалификаторыСтроки(20);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);

	Массив = Новый Массив;
	Массив.Добавить(Тип("Структура")); // Произвольный 
	ОписаниеТипаСтруктура = Новый ОписаниеТипов(Массив);
	Массив.Очистить();

	Если  ТипЗнч(ДаннДляОтображения) = Тип("Структура") Тогда 

		ТЗ = Новый ТаблицаЗначений;
		НовСтр = ТЗ.Добавить();
		ОписаниеТиповСсылок = Новый ОписаниеТипов(Новый ОписаниеТипов(Справочники.ТипВсеСсылки(), Документы.ТипВсеСсылки().Типы(),Перечисления.ТипВсеСсылки().Типы() ));

			Для Каждого ТекЭлем из ДаннДляОтображения Цикл
				
				Если ТипЗнч(ТекЭлем.Значение) = Тип("Структура") Тогда
					ТЗ.Колонки.Добавить(ТекЭлем.Ключ, Новый ОписаниеТипов());
					
					НовСтр[ТекЭлем.Ключ] = ТекЭлем.Значение;
				Иначе 
					
					Если ТекЭлем.Значение = Неопределено Тогда
						ТЗ.Колонки.Добавить(ТекЭлем.Ключ, ОписаниеТиповС);
					Иначе  
						ТЗ.Колонки.Добавить(ТекЭлем.Ключ, 
						?(ОписаниеТиповСсылок.СодержитТип(ТипЗнч(ТекЭлем.Значение)),
						Новый ОписаниеТипов(СтрЗаменить(ТекЭлем.Значение.Метаданные().ПолноеИмя(),".","Ссылка.")),
						Новый ОписаниеТипов(Строка(ТипЗнч(ТекЭлем.Значение)))));
					КонецЕсли;
				
						Если ТекЭлем.Значение = 0 Тогда 
							НовСтр[ТекЭлем.Ключ] = Формат(ТекЭлем.Значение,"ЧН=0")
						ИначеЕсли ТекЭлем.Значение = "" Или ТекЭлем.Значение = Неопределено Тогда 
							НовСтр[ТекЭлем.Ключ] = Формат(ТекЭлем.Значение,"-")
						Иначе 
							НовСтр[ТекЭлем.Ключ] = ТекЭлем.Значение;
						КонецЕсли;

				КонецЕсли;                          
				
			КонецЦикла;
		 	
			Возврат ТЗ;

	ИначеЕсли ТипЗнч(ДаннДляОтображения) = Тип("Массив") Тогда 

			ТЗ = Новый ТаблицаЗначений;
			ОписаниеТиповСсылок = Новый ОписаниеТипов(Новый ОписаниеТипов(Справочники.ТипВсеСсылки(), Документы.ТипВсеСсылки().Типы(),Перечисления.ТипВсеСсылки().Типы() ));

				Для Каждого ТекЭлем из ДаннДляОтображения Цикл
					НовСтр = ТЗ.Добавить();
						Если ТипЗнч(ТекЭлем) = Тип("Структура") Тогда
							Для Каждого СтрТекЭлем из ТекЭлем Цикл
								Если ТипЗнч(СтрТекЭлем.Значение) = Тип("Структура") Тогда

									Если ТЗ.Колонки.Найти(СтрТекЭлем.Ключ) = Неопределено Тогда
										ТЗ.Колонки.Добавить(СтрТекЭлем.Ключ, Новый ОписаниеТипов());
									КонецЕсли;
									
									НовСтр[СтрТекЭлем.Ключ] = СтрТекЭлем.Значение;
								Иначе 
									
									Если СтрТекЭлем.Значение = Неопределено Тогда

										Если ТЗ.Колонки.Найти(СтрТекЭлем.Ключ) = Неопределено Тогда
											ТЗ.Колонки.Добавить(СтрТекЭлем.Ключ, ОписаниеТиповС);
										КонецЕсли;

									Иначе

										Если ТЗ.Колонки.Найти(СтрТекЭлем.Ключ) = Неопределено Тогда
											ТЗ.Колонки.Добавить(СтрТекЭлем.Ключ, 
														?(ОписаниеТиповСсылок.СодержитТип(ТипЗнч(СтрТекЭлем.Значение)),
														Новый ОписаниеТипов(СтрЗаменить(СтрТекЭлем.Значение.Метаданные().ПолноеИмя(),".","Ссылка.")),
																												Новый ОписаниеТипов(Строка(ТипЗнч(СтрТекЭлем.Значение)))));
										КонецЕсли;
  
									КонецЕсли;
								
										Если СтрТекЭлем.Значение = 0 Тогда 
											НовСтр[СтрТекЭлем.Ключ] = Формат(СтрТекЭлем.Значение,"ЧН=0")
										ИначеЕсли СтрТекЭлем.Значение = "" Или СтрТекЭлем.Значение = Неопределено Тогда 
											НовСтр[СтрТекЭлем.Ключ] = Формат(СтрТекЭлем.Значение,"-")
										Иначе 
											НовСтр[СтрТекЭлем.Ключ] = СтрТекЭлем.Значение;
										КонецЕсли;
									КонецЕсли;

							КонецЦикла;
						Иначе 

										Если ТЗ.Колонки.Найти(СтрТекЭлем.Ключ) = Неопределено Тогда
											ТЗ.Колонки.Добавить(ТекЭлем.Ключ, 
												?(ОписаниеТиповСсылок.СодержитТип(ТипЗнч(ТекЭлем.Значение)),
													Новый ОписаниеТипов(СтрЗаменить(ТекЭлем.Значение.Метаданные().ПолноеИмя(),".","Ссылка.")),
														Новый ОписаниеТипов(Строка(ТипЗнч(ТекЭлем.Значение)))));
										КонецЕсли;
							
							НовСтр[ТекЭлем.Ключ] = ТекЭлем.Значение;  
						КонецЕсли;                        
					
				КонецЦикла;
		 	
			Возврат ТЗ;

		КонецЕсли;

					//Если ТипЗнч(ТекЭлем.Значение) <> Тип("Структура") И ТипЗнч(ТекЭлем.Значение) <> Тип("Массив") Тогда 
					//	СтрокаТЧРЗ = РезультатТаблицаЗначений.Добавить();
					//	СтрокаТЧРЗ.Реквизит1 = ОтступА + ЭлементА.Ключ + ": " + ЭлементА.Значение;
					//КонецЕсли;

КонецФункции

&НаСервере
Процедура ВывестиТаблицуНаФорму(УФ, ИмяТЗНаФорме, ТЗ, ТЗОбработчиковСобытий = Неопределено) 

   // СОЗДАНИЕ РЕКВИЗИТОВ ФОРМЫ
    МассивДобавляемыхРеквизитов = Новый Массив; 
    
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяТЗНаФорме, Колонка.Заголовок));    
    КонецЦикла; 
    
    МассивУдаляемыхРеквизитов = ЭтаФорма.ПолучитьРеквизиты(ИмяТЗНаФорме);
    МассивИменУдаляемыхРеквизитов = Новый Массив;
    Для каждого Элемент Из МассивУдаляемыхРеквизитов Цикл
        МассивИменУдаляемыхРеквизитов.Добавить(ИмяТЗНаФорме + "." + Элемент.Имя);
    КонецЦикла;

	УФ.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, МассивИменУдаляемыхРеквизитов); 

    // СОЗДАНИЕ ЭЛЕМЕНТОВ ФОРМЫ
    Для каждого Элемент Из МассивУдаляемыхРеквизитов Цикл
        УдаляемыйЭлемент = УФ.Элементы.Найти(ИмяТЗНаФорме + Элемент.Имя);
        УФ.Элементы.Удалить(УдаляемыйЭлемент);
    КонецЦикла;

		Для Каждого Колонка Из ТЗ.Колонки Цикл
			НоваяКолонка = УФ.Элементы.Добавить(ИмяТЗНаФорме + "_" + Колонка.Имя, Тип("ПолеФормы"), УФ.Элементы["ЭлементПодробнДаннТаблЗнач"]); 
			НоваяКолонка.Заголовок = Колонка.Заголовок; 
			НоваяКолонка.ПутьКДанным = ИмяТЗНаФорме + "." + Колонка.Имя; 
			НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
			НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
		КонецЦикла;        
    
    УФ[ИмяТЗНаФорме].Загрузить(ТЗ);
    
    // Привязка обработчиков событий
    Если ТЗОбработчиковСобытий = Неопределено Тогда
        Возврат;
    КонецЕсли;    
    
    Для Каждого Строка Из ТЗОбработчиковСобытий Цикл
        УФ.Элементы[Строка.ИмяЭлемента].УстановитьДействие(Строка.ИмяСобытия, Строка.ИмяЭлемента + Строка.ИмяСобытия); 
    КонецЦикла;   

КонецПроцедуры

&НаКлиенте
Процедура ЭлементПодробнДаннТаблЗначВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда 
		Возврат
	КонецЕсли;


		Если ТипЗнч(Элемент.ТекущиеДанные[Прав(Поле.Имя, СтрДлина(Поле.Имя) - СтрНайти(Поле.Имя, "_"))]) = Тип("Структура") Тогда
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ДаннДляОтображения", Элемент.ТекущиеДанные[Прав(Поле.Имя, СтрДлина(Поле.Имя) - СтрНайти(Поле.Имя, "_"))]);
			
			ОткрытьФорму("ОбщаяФорма.ПодробныеДанные", ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные[Прав(Поле.Имя, СтрДлина(Поле.Имя) - СтрНайти(Поле.Имя, "_"))]) = Тип("Массив") Тогда
			
			//ПараметрыФормы = Новый Структура();
			//ПараметрыФормы.Вставить("ДаннДляОтображения", Элемент.ТекущиеДанные[Прав(Поле.Имя, СтрДлина(Поле.Имя) - СтрНайти(Поле.Имя, "_"))]);
			//
			//ОткрытьФорму("ОбщаяФорма.ПодробныеДанные", ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		КонецЕсли;

КонецПроцедуры
